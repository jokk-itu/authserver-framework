import{t as i,h as L,a as o,b as w}from"../chunks/BdD32qd5.js";import"../chunks/BOyCDzPS.js";import{p as D,f as m,a as P,$ as j,s as n,n as g}from"../chunks/Db0b_LWK.js";import{i as S}from"../chunks/hXpMuBZJ.js";import{C as y}from"../chunks/Dg6GzD5d.js";import{P as x,S as p}from"../chunks/DcIxqC40.js";import{T as f,R as e}from"../chunks/BL1phRJf.js";var z=i("<p>The discovery endpoint returns a JSON document containing metadata about AuthServer, such as endpoints and supported functionality.</p>"),O=i(`<p>The discovery endpoint is invoked through HTTP using the GET method.</p> <p>The following example is a GET request to the discovery endpoint.</p> <!> <p>The following example is a GET response from the discovery endpoint.
        The response is not complete, but contains an example of each type that is returned.</p> <!> <p>The following table describes the fields in the JSON document.</p> <!>`,1),E=i("<!> <!> <!> <!>",1);function B(b,k){D(k,!1);let q=["Name","Description"],R=[[new e("OpenId Connect Discovery","https://openid.net/specs/openid-connect-discovery-1_0.html"),new e("Core specification for OpenId Connect Discovery")],[new e("OAuth Discovery","https://datatracker.ietf.org/doc/html/rfc8414"),new e("Core specification for OAuth Discovery")]],T=["Name","Description"],$=[[new e("issuer"),new e("URL of authserver instance")],[new e("service_documentation"),new e("URL of authserver documentation")],[new e("op_policy_uri"),new e("URL of authserver policy page")],[new e("op_tos_uri"),new e("URL of authserver terms-of-service page")],[new e("authorization_endpoint"),new e("URL of authserver authorize endpoint")],[new e("token_endpoint"),new e("URL of authserver token endpoint")],[new e("userinfo_endpoint"),new e("URL of authserver userinfo endpoint")],[new e("jwks_uri"),new e("URL of authserver jwks endpoint")],[new e("registration_endpoint"),new e("URL of authserver registration endpoint")],[new e("endsession_endpoint"),new e("URL of authserver endsession endpoint")],[new e("introspection_endpoint"),new e("URL of authserver introspection endpoint")],[new e("revocation_endpoint"),new e("URL of authserver revocation endpoint")],[new e("pushed_authorization_request_endpoint"),new e("URL of authserver pushed authorization request endpoint")],[new e("grant_management_endpoint"),new e("URL of authserver grant management endpoint")],[new e("protected_resources"),new e("URLS for protected resources that accept tokens from authserver")],[new e("claims_supported"),new e("Claims that are supported by authserver")],[new e("scopes_supported"),new e("Scopes that are supported by authserver")],[new e("acr_values_supported"),new e("Acr values that are supported by authserver")],[new e("claim_types_supported"),new e("Claim types that are supported by authserver")],[new e("prompt_values_supported"),new e("Prompt values that are supported by authserver")],[new e("display_values_supported"),new e("Display values that are supported by authserver")],[new e("subject_values_supported"),new e("Subject types that are supported by authserver")],[new e("grant_types_supported"),new e("Grant types that are supported by authserver")],[new e("challenge_methods_supported"),new e("Challenge methods that are supported by authserver")],[new e("responses_types_supported"),new e("Response types that are supported by authserver")],[new e("response_modes_supported"),new e("Response modes that are supported by authserver")],[new e("introspection_endpoint_auth_methods_supported"),new e("Introspection endpoint auth modes that are supported by authserver")],[new e("revocation_endpoint_auth_methods_supported"),new e("Revocation endpoint auth modes that are supported by authserver")],[new e("token_endpoint_auth_methods_supported"),new e("Token endpoint auth modes that are supported by authserver")],[new e("grant_management_actions_supported"),new e("Grant management actions that are supported by authserver")],[new e("id_token_signing_alg_values_supported"),new e("Id token signing alg values that are supported by authserver")],[new e("id_token_encryption_alg_values_supported"),new e("Id token encryption alg values that are supported by authserver")],[new e("id_token_encryption_enc_values_supported"),new e("Id token encryption enc values that are supported by authserver")],[new e("userinfo_token_signing_alg_values_supported"),new e("Userinfo token signing alg values that are supported by authserver")],[new e("userinfo_token_encryption_alg_values_supported"),new e("Userinfo token encryption alg values that are supported by authserver")],[new e("userinfo_token_encryption_enc_values_supported"),new e("Userinfo token encryption enc values that are supported by authserver")],[new e("request_object_token_signing_alg_values_supported"),new e("Request object token signing alg values that are supported by authserver")],[new e("request_object_token_encryption_alg_values_supported"),new e("Request object token encryption alg values that are supported by authserver")],[new e("request_object_token_encryption_enc_values_supported"),new e("Request object token encryption enc values that are supported by authserver")],[new e("token_endpoint_auth_signing_alg_values"),new e("Token endpoint auth signing alg values that are supported by authserver")],[new e("token_endpoint_auth_encryption_alg_values"),new e("Token endpoint auth encryption alg values that are supported by authserver")],[new e("token_endpoint_auth_encryption_enc_values"),new e("Token endpoint auth encryption enc values that are supported by authserver")],[new e("dpop_signing_alg_values_supported"),new e("DPoP token signing alg values that are supported by authserver")],[new e("authorization_response_iss_parameter_supported"),new e("Is the iss parameter in authorization responses supported by authserver")],[new e("backchannel_logout_supported"),new e("Is backchannel logout supported by authserver")],[new e("require_request_uri_registration"),new e("Is request uri registration required by authserver")],[new e("claims_parameter_supported"),new e("Is claims parameter supported by authserver")],[new e("request_parameter_supported"),new e("Is request parameter supported by authserver")],[new e("request_uri_parameter_supported"),new e("Is request uri parameter supported by authserver")],[new e("require_signed_request_object"),new e("Is request parameter required by authserver")],[new e("require_pushed_authorization_requests"),new e("Is pushed authorization requests required by authserver")],[new e("grant_management_action_required"),new e("Is grant management action required by authserver")]];S();var u=E();L(t=>{j.title="Discovery Metadata Endpoint"});var d=m(u);x(d,{title:"Discovery"});var _=n(d,2);p(_,{title:"Introduction",children:(t,l)=>{var s=z();o(t,s)},$$slots:{default:!0}});var h=n(_,2);p(h,{title:"Specifications",children:(t,l)=>{f(t,{title:"Specifications",tableNumber:1,headers:q,rowCellDefinitions:R})},$$slots:{default:!0}});var U=n(h,2);p(U,{title:"Discovery Endpoint",children:(t,l)=>{var s=O(),c=n(m(s),4);y(c,{children:(a,C)=>{g();var r=w();r.nodeValue=`
GET /.well-known/openid-configuration HTTP/1.1
Host: idp.authserver.dk
        `,o(a,r)},$$slots:{default:!0}});var v=n(c,4);y(v,{children:(a,C)=>{g();var r=w();r.nodeValue=`
HTTP/1.1 200 OK
Content-Type: appication/json;charset=UTF-8
Cache-Control: max-age=86400, public, must-revalidate

{
  "issuer": "https://idp.authserver.dk",
  "scopes_supported": ["openid", "profile"],
  "token_endpoint_auth_signing_alg_values": ["RS256"],
  "backchannel_logout_supported": true
}
        `,o(a,r)},$$slots:{default:!0}});var I=n(v,4);f(I,{title:"Metadata fields",tableNumber:2,headers:T,rowCellDefinitions:$}),o(t,s)},$$slots:{default:!0}}),o(b,u),P()}export{B as component};
